//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnifyService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.passport.com/", ConfigurationName="UnifyService.PassportServiceSoap")]
    public interface PassportServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.passport.com/TokenGetCert", ReplyAction="*")]
        System.Threading.Tasks.Task<UnifyService.TokenGetCertResponse> TokenGetCertAsync(UnifyService.TokenGetCertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.passport.com/TokenClear", ReplyAction="*")]
        System.Threading.Tasks.Task<UnifyService.TokenClearResponse> TokenClearAsync(UnifyService.TokenClearRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TokenGetCertRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TokenGetCert", Namespace="http://www.passport.com/", Order=0)]
        public UnifyService.TokenGetCertRequestBody Body;
        
        public TokenGetCertRequest()
        {
        }
        
        public TokenGetCertRequest(UnifyService.TokenGetCertRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.passport.com/")]
    public partial class TokenGetCertRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string token;
        
        public TokenGetCertRequestBody()
        {
        }
        
        public TokenGetCertRequestBody(string token)
        {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TokenGetCertResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TokenGetCertResponse", Namespace="http://www.passport.com/", Order=0)]
        public UnifyService.TokenGetCertResponseBody Body;
        
        public TokenGetCertResponse()
        {
        }
        
        public TokenGetCertResponse(UnifyService.TokenGetCertResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.passport.com/")]
    public partial class TokenGetCertResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public object TokenGetCertResult;
        
        public TokenGetCertResponseBody()
        {
        }
        
        public TokenGetCertResponseBody(object TokenGetCertResult)
        {
            this.TokenGetCertResult = TokenGetCertResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TokenClearRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TokenClear", Namespace="http://www.passport.com/", Order=0)]
        public UnifyService.TokenClearRequestBody Body;
        
        public TokenClearRequest()
        {
        }
        
        public TokenClearRequest(UnifyService.TokenClearRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.passport.com/")]
    public partial class TokenClearRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string token;
        
        public TokenClearRequestBody()
        {
        }
        
        public TokenClearRequestBody(string token)
        {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TokenClearResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TokenClearResponse", Namespace="http://www.passport.com/", Order=0)]
        public UnifyService.TokenClearResponseBody Body;
        
        public TokenClearResponse()
        {
        }
        
        public TokenClearResponse(UnifyService.TokenClearResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class TokenClearResponseBody
    {
        
        public TokenClearResponseBody()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface PassportServiceSoapChannel : UnifyService.PassportServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PassportServiceSoapClient : System.ServiceModel.ClientBase<UnifyService.PassportServiceSoap>, UnifyService.PassportServiceSoap
    {
        
        /// <summary>
        /// 实现此分部方法，配置服务终结点。
        /// </summary>
        /// <param name="serviceEndpoint">要配置的终结点</param>
        /// <param name="clientCredentials">客户端凭据</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PassportServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(PassportServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), PassportServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PassportServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PassportServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PassportServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PassportServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PassportServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UnifyService.TokenGetCertResponse> UnifyService.PassportServiceSoap.TokenGetCertAsync(UnifyService.TokenGetCertRequest request)
        {
            return base.Channel.TokenGetCertAsync(request);
        }
        
        public System.Threading.Tasks.Task<UnifyService.TokenGetCertResponse> TokenGetCertAsync(string token)
        {
            UnifyService.TokenGetCertRequest inValue = new UnifyService.TokenGetCertRequest();
            inValue.Body = new UnifyService.TokenGetCertRequestBody();
            inValue.Body.token = token;
            return ((UnifyService.PassportServiceSoap)(this)).TokenGetCertAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UnifyService.TokenClearResponse> UnifyService.PassportServiceSoap.TokenClearAsync(UnifyService.TokenClearRequest request)
        {
            return base.Channel.TokenClearAsync(request);
        }
        
        public System.Threading.Tasks.Task<UnifyService.TokenClearResponse> TokenClearAsync(string token)
        {
            UnifyService.TokenClearRequest inValue = new UnifyService.TokenClearRequest();
            inValue.Body = new UnifyService.TokenClearRequestBody();
            inValue.Body.token = token;
            return ((UnifyService.PassportServiceSoap)(this)).TokenClearAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PassportServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.PassportServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PassportServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://sso.haikan.com.cn/api/passportservice.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.PassportServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://sso.haikan.com.cn/api/passportservice.asmx");
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            PassportServiceSoap,
            
            PassportServiceSoap12,
        }
    }
}
